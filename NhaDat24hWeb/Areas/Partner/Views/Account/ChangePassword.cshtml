@{
    Layout = "~/Areas/Partner/Views/Shared/_Layout.cshtml";
}

@model string
<style>
    .form-group.success input {
        border-color: #2ecc71;
    }

    .form-group.error input {
        border-color: #e74c3c;
    }

    .form-group small {
        color: #e74c3c;
        position: absolute;
        bottom: -20px;
        left: 0;
        visibility: hidden;
        font-size: 12px;
    }

    .form-group.error small {
        visibility: visible;
    }
</style>
<div class="dashboard-content">
    <div class="mb-3">
        <h4 class="text-bold">Đổi mật khẩu</h4>
    </div>
    <div class="dashboard-wraper">
        <!-- Basic Information -->
        <div class="block-body" id="form-register-partner">
            @using (Html.BeginForm("UpdatePasswordUser", "Account", FormMethod.Post, new { area = "Partner", @id = "ChangePW", @class = "form-simple needs-validation", enctype = "multipart/form-data" }))
            {
                <div class="col-lg-8 col-12">
                    <div class="form-group">
                        <label>Mật khẩu cũ</label>
                        <input type="password" id="old_password" name="oldpassword" class="form-control" placeholder="Nhập mật khẩu hiện tại" required>
                        <small>Error message</small>
                        <i class="fa-solid fa-eye pw-icon" id="oldpw"></i>
                    </div>
                </div>
                <div class="col-lg-8 col-12">
                    <div class="form-group">
                        <label>Mật khẩu mới</label>
                        <input id="new_password" name="newpassword" type="password" class="form-control simple" placeholder="Nhập mật khẩu mới" required>
                        <small>Error message</small>
                        <i class="fa-solid fa-eye pw-icon" id="newpw"></i>
                    </div>
                </div>
                <div class="col-lg-8 col-12">
                    <div class="form-group">
                        <label>Nhập lại mật khẩu mới</label>
                        <input id="re_password" name="repassword" type="password" class="form-control simple" placeholder="Nhập lại mật khẩu mới" required>
                        <small>Error message</small>
                        <i class="fa-solid fa-eye pw-icon" id="repw"></i>
                    </div>
                </div>
                <div class="form-group btn-register mt-4">
                    <button type="submit" class="btn bg-primary2">Cập nhật thông tin</button>
                </div>
            }
        </div>

    </div>
</div>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@if (Model != null)
    {
        <script>
            if(@Model=="1"){
                swal("Thông báo!", "Password cũ không đúng. đổi mật khẩu thất bại.", "error");
            }
            else if (@Model== "0") {
                swal("Thông báo!", "Đổi mật khẩu thành công.", "success");
            }
        </script>
    }
<script>

    window.localStorage.setItem("menu-active", "Account-item");

    const oldpw = document.querySelector('#oldpw');
    const oldpwinput = document.querySelector('#old_password');
    const newpw = document.querySelector('#newpw');
    const newpwinput = document.querySelector('#new_password');
    const repw = document.querySelector('#repw');
    const repwinput = document.querySelector('#re_password');

    oldpw.addEventListener('click', function (e) {
        // toggle the type attribute
        const typeold = oldpwinput.getAttribute('type') === 'password' ? 'text' : 'password';
        oldpwinput.setAttribute('type', typeold);
        // toggle the eye slash icon
        if (typeold == 'text') {
            this.classList.remove('fa-eye')
            this.classList.toggle('fa-eye-slash');
        } else {
            this.classList.toggle('fa-eye')
            this.classList.remove('fa-eye-slash');
        }
    });
    newpw.addEventListener('click', function (e) {
        // toggle the type attribute
        const typenew = newpwinput.getAttribute('type') === 'password' ? 'text' : 'password';
        newpwinput.setAttribute('type', typenew);
        // toggle the eye slash icon
        if (typenew == 'text') {
            this.classList.remove('fa-eye')
            this.classList.toggle('fa-eye-slash');
        } else {
            this.classList.toggle('fa-eye')
            this.classList.remove('fa-eye-slash');
        }
    });
    repw.addEventListener('click', function (e) {
        // toggle the type attribute
        const typere = repwinput.getAttribute('type') === 'password' ? 'text' : 'password';
        repwinput.setAttribute('type', typere);
        // toggle the eye slash icon
        if (typere == 'text') {
            this.classList.remove('fa-eye')
            this.classList.toggle('fa-eye-slash');
        } else {
            this.classList.toggle('fa-eye')
            this.classList.remove('fa-eye-slash');
        }
    });
</script>

